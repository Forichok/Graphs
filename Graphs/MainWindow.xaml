<Window x:Class="Graphs.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:go="http://schemas.nwoods.com/GoXam"
        xmlns:local="clr-namespace:Graphs"
        xmlns:helpers="clr-namespace:Graphs.Sources.Helpers"
        xmlns:converters="clr-namespace:Graphs.Sources.Converters"
        xmlns:viewModels="clr-namespace:Graphs.Sources.ViewModels"
        xmlns:models="clr-namespace:Graphs.Sources.Models"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">

    <Window.Resources>
        <converters:LinkDirectionConverter x:Key="LinkDirectionConverter" />
        <converters:SelectionConverter x:Key="SelectionConverter" />
        <viewModels:MainViewModel x:Key="Vm" />
        <RadialGradientBrush x:Key="theNodeBrush">
            <GradientStop Color="White" Offset="0" />
            <GradientStop Color="Lavender" Offset="1" />
        </RadialGradientBrush>

        <!-- when a node is selected this Button appears -->
        <DataTemplate x:Key="StateSelectionTemplate">
            <go:SpotPanel>
                <Button 
                    Command="{Binding Source={StaticResource Vm},Path=AddNewNodeCommand}" 
                    CommandParameter="{Binding}"
                go:SpotPanel.Spot="TopRight" go:SpotPanel.Alignment="Center">
                    <go:NodePanel>
                        <go:NodeShape go:NodePanel.Figure="ThickCross" Width="8" Height="8"
                          Fill="White" Stroke="Black" StrokeThickness="1" />
                    </go:NodePanel>
                </Button>
            </go:SpotPanel>
        </DataTemplate>

        <!-- the template for nodes -->
        <DataTemplate x:Key="NodeTemplate" DataType="models:NodeModel">
            <go:NodePanel go:Node.Location="{Binding Path=Data.Location, Mode=TwoWay}"
                    Sizing="Auto"
                    go:Part.SelectionAdorned="True"
                    go:Part.SelectionAdornmentTemplate="{StaticResource StateSelectionTemplate}"
                    go:Node.LinkableFrom="True" go:Node.LinkableTo="True"
                    go:Node.LinkableDuplicates="True" go:Node.LinkableSelfNode="True">
                <go:NodeShape go:NodePanel.Figure ="{Binding Path=Data.Figure}"  Cursor="Hand"
                   Fill="{StaticResource theNodeBrush}" StrokeThickness="3">
                    <go:NodeShape.Stroke>
                        <MultiBinding Converter="{StaticResource SelectionConverter}" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" ConverterParameter="Node">
                            <Binding Path="Part.IsSelected" UpdateSourceTrigger="PropertyChanged"></Binding>
                            <Binding Path="Data.IsStartNode" UpdateSourceTrigger="PropertyChanged"></Binding>
                            <Binding Path="Data.IsFinishNode" UpdateSourceTrigger="PropertyChanged"></Binding>
                            <Binding Path="Data.IsSelected" UpdateSourceTrigger="PropertyChanged"></Binding>
                        </MultiBinding>

                    </go:NodeShape.Stroke>
                </go:NodeShape>
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                <TextBlock Text="{Binding Path=Data.Text, Mode=TwoWay}"
                           MinWidth="10"
                   TextWrapping="Wrap" Margin="10, 3" Cursor="Arrow"
                   go:Node.LinkableFrom="False" go:Node.LinkableTo="False"
                   go:Part.TextEditable="True" />
                <TextBlock Text="{Binding Path=Data.Key}"
                           TextAlignment="Center"
                           Margin="10,0"
                           go:Part.TextEditable="False" />
                </StackPanel>
                <ContextMenuService.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Start Node" Command="{Binding Source={StaticResource Vm},Path=SetStartNodeCommand}" CommandParameter="{Binding}"></MenuItem>
                        <MenuItem Header="Finish Node" Command="{Binding Source={StaticResource Vm},Path=SetFinishNodeCommand}" CommandParameter="{Binding}"></MenuItem>
                        <MenuItem Header="Change Figure" Command="{Binding Source={StaticResource Vm},Path=ChangeFigureMenuCommand}" CommandParameter="{Binding}"/>
                        <MenuItem Command="Delete" Click="Delete_Click" />

                    </ContextMenu>
                </ContextMenuService.ContextMenu>

            </go:NodePanel>
        </DataTemplate>

        <!-- the template for links -->
        <DataTemplate x:Key="LinkTemplate" DataType="models:LinkModel">
            <go:LinkPanel go:Link.SelectionElementName="Path" go:Part.Reshapable="True">
                <go:Link.Route>
                    <go:Route Curve="Bezier" Adjusting="Stretch"
                    RelinkableFrom="True" RelinkableTo="True"
                             Curviness="{Binding Curviness}"
                              Corner="15"/>
                </go:Link.Route>
                <go:LinkShape x:Name="Path" StrokeThickness="3">
                    <go:LinkShape.Stroke>
                        <MultiBinding Converter="{StaticResource SelectionConverter}" ConverterParameter="Link">
                            <Binding Path="Part.IsSelected"></Binding>
                            <Binding Path="Data.IsSelected"></Binding>
                        </MultiBinding>

                    </go:LinkShape.Stroke>
                </go:LinkShape>
                <Path Fill="Black" go:LinkPanel.ToArrow = "{Binding Path=Data.IsOriented, Converter={StaticResource LinkDirectionConverter },Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                <go:NodePanel Sizing="Auto"
                      go:LinkPanel.Offset="{Binding Path=Data.Offset, Mode=TwoWay}">
                    <Rectangle>
                        <Shape.Fill>
                            <RadialGradientBrush>
                                <GradientStop Offset="0" Color="White" />
                                <GradientStop Offset="1" Color="Transparent" />
                            </RadialGradientBrush>
                        </Shape.Fill>
                    </Rectangle>
                    <TextBlock 
                        TextWrapping="Wrap" TextAlignment="Center"
                    go:Part.TextEditable="True" Margin="10" >
                        <TextBlock.Text>
                            <Binding Path="Data.Weight" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <helpers:NumberValidation/>
                                </Binding.ValidationRules>
                            </Binding>

                        </TextBlock.Text>
                    </TextBlock>
                </go:NodePanel>
                <ContextMenuService.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Direction">
                            <MenuItem Header="Reverse" Click="ReverseClick" Command="{Binding Source={StaticResource Vm},Path=ReverseMenuCommand}" CommandParameter="{Binding}"/>
                            <MenuItem Header="Switch orientated" Click="ChangeOrientationClick" IsCheckable="True" Command="{Binding Source={StaticResource Vm},Path=ChangeLinkDirectionMenuCommand}" CommandParameter="{Binding}"/>
                        </MenuItem>
                        <MenuItem Click="Delete_Click"  Command="Delete" />
                    </ContextMenu>
                </ContextMenuService.ContextMenu>

            </go:LinkPanel>
        </DataTemplate>
    </Window.Resources>

    <Window.DataContext>
        <DynamicResource ResourceKey="Vm"></DynamicResource>
    </Window.DataContext>

    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Menu Grid.Row="0">
                <MenuItem Header="File">
                    <MenuItem Header="Adjacency matrix">
                        <MenuItem Header="Load Adjency matrix" Command="{Binding LoadAdjencyMatrixCommand}"/>
                        <MenuItem Header="Save Adjency matrix" Command="{Binding SaveAdjencyMatrixCommand}"/>
                    </MenuItem>
                    <MenuItem Header="Incidence matrix">
                        <MenuItem Header="Load Incidence matrix" Command="{Binding LoadIncidenceMatrixCommand}"/>
                        <MenuItem Header="Save Incidence matrix" Command="{Binding SaveIncidenceMatrixCommand}"/>
                    </MenuItem>
                    <MenuItem Header="By Edges">
                        <MenuItem Header="Load by edges" Command="{Binding LoadByEdgesCommand}"/>
                        <MenuItem Header="Save by edges" Command="{Binding SaveByEdgesCommand}"/>
                    </MenuItem>
                    <MenuItem Header="Universal">
                        <MenuItem Header="Load universal" Command="{Binding LoadCommand}" CommandParameter="{Binding ElementName=myDiagram}"/>
                        <MenuItem Header="Save universal" Command="{Binding SaveCommand}" CommandParameter="{Binding ElementName=myDiagram}"/>
                    </MenuItem>
                    <MenuItem Header="Save as image" Command="{Binding Source={StaticResource Vm},Path=SaveAsImageCommand}"
                              CommandParameter="{Binding ElementName=myDiagram}"/>
                    <MenuItem Header="Exit" Command="{Binding ExitCommand}"/>
                </MenuItem>

                <MenuItem Header="Tasks">
                    <MenuItem Header="2.BFS" Command="{Binding BfsCommand}"/>
                    <MenuItem Header="3.BestFS" Command="{Binding BestfsCommand}"/>
                    <MenuItem Header="4.Dijkstra Matrix" Command="{Binding DijkstraMatrixCommand}"/>
                    <MenuItem Header="6.Radius, Diameter" Command="{Binding Task6Command}"/>
                    <MenuItem Header="7.Isomorphism" Command="{Binding IsomorphismCommand}"/>
                    <MenuItem Header="8.Connectivity" Command="{Binding ConnectivityCommand}"/>

                    
                </MenuItem>

                <MenuItem Header="About">
                    <MenuItem Header="Help"/>
                    <MenuItem Header="About"/>
                </MenuItem>
                <MenuItem Header="Setting">
                    <WrapPanel>
                        <Label Content="Oriented Edges"></Label>
                        <CheckBox VerticalAlignment="Center" Name="IsOrientedCheckBox"></CheckBox>
                    </WrapPanel>
                </MenuItem>
                <MenuItem Header="Switch Graph" Command="{Binding SwitchGraphCommand}"></MenuItem>
            </Menu>


            <Grid Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <GridSplitter Width="10" Grid.Column="1"></GridSplitter>

                <TabControl Grid.Column="0">

                    <TabItem Header="Matrix">

                        <StackPanel>
                            <ItemsControl Name="MatrixControl">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" Margin="25,0,0,0"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Label Width="25" Content="{Binding Heading}" BorderThickness="1" BorderBrush="Black">
                                            <ContextMenuService.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="Delete" Click="DeleteNodeInMatrix_Click" />
                                                </ContextMenu>
                                            </ContextMenuService.ContextMenu>
                                        </Label>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <ItemsControl   Name="Matrix" ItemsSource="{Binding ElementName=MatrixControl,Path=ItemsSource}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <StackPanel Orientation="Horizontal" >
                                                <Label Width="25" Content="{Binding Heading}" BorderThickness="1" BorderBrush="Black">
                                                    <ContextMenuService.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Header="Delete" Click="DeleteNodeInMatrix_Click" />
                                                        </ContextMenu>
                                                    </ContextMenuService.ContextMenu>
                                                </Label>
                                                <ItemsControl ItemsSource="{Binding Values}">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <StackPanel Orientation="Horizontal"/>
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate>
                                                            <StackPanel Orientation="Horizontal">
                                                                <TextBox Width="25"  Text="{Binding Path=Weight,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" BorderThickness="1" BorderBrush="Black"/>

                                                            </StackPanel>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                            </StackPanel>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </TabItem>
                    <TabItem Header="Nodes">
                        <DataGrid Name="NodesGrid" ItemsSource="{Binding Model.NodesSource, UpdateSourceTrigger=PropertyChanged}"/>
                    </TabItem>

                    <TabItem Header="Links">
                        <DataGrid Name="LinksGrid" ItemsSource="{Binding Model.LinksSource, UpdateSourceTrigger=PropertyChanged}"/>
                    </TabItem>

                </TabControl>

                <go:Diagram Grid.Column="2" x:Name="myDiagram"
                        Padding="10"
                        InitialPanelSpot="Center"
                        InitialDiagramBoundsSpot="Center"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        NodeTemplate="{StaticResource NodeTemplate}"
                        LinkTemplate="{StaticResource LinkTemplate}"
                        Model="{Binding Model}"
                        PartManager="{Binding PartManager}"
                        AllowDelete="True"
                        AllowCopy="True" 
                            PreviewKeyUp="MainWindow_OnKeyDown">

                    <go:Diagram.ClickCreatingTool>
                        <!-- require a double-click to create a new node -->
                        <go:ClickCreatingTool DoubleClick="True">
                            <go:ClickCreatingTool.PrototypeData>
                                <!-- the node data to be copied for each new node created by this tool -->
                                <models:NodeModel/>
                            </go:ClickCreatingTool.PrototypeData>
                        </go:ClickCreatingTool>
                    </go:Diagram.ClickCreatingTool>
                    <ContextMenuService.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Reset" Command="{Binding ResetGraphCommand}" />
                            <MenuItem Command="Paste" />
                            <MenuItem Command="Undo" />
                            <MenuItem Command="Redo" />
                        </ContextMenu>
                    </ContextMenuService.ContextMenu>
                </go:Diagram>

            </Grid>
        </Grid>
    </Grid>

</Window>